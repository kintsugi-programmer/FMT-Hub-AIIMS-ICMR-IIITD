CREATE DATABASE fmt_hub;
USE fmt_hub;

-- Centers Table: Stores medical center details
CREATE TABLE centers (
    center_code VARCHAR(2) PRIMARY KEY,
    center_name VARCHAR(100) NOT NULL
);

-- Users Table: Stores login credentials and roles (agents, central readers, super admin)
CREATE TABLE users (
    id INT PRIMARY KEY AUTO_INCREMENT,
    username VARCHAR(50) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    role ENUM('agent', 'central_reader', 'super_admin') NOT NULL,
    center_code VARCHAR(2) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (center_code) REFERENCES centers(center_code) ON DELETE CASCADE
);

-- Tests Table: Stores test data for each patient
CREATE TABLE tests (
    id INT PRIMARY KEY AUTO_INCREMENT,
    patient_mask_id VARCHAR(50) UNIQUE NOT NULL,
    gender ENUM('Male', 'Female', 'Other') NOT NULL,
    trial_id ENUM('ALTER_UC', 'ALTER_CD', 'BOOST_UC', 'BOOST_CD') NOT NULL,
    center_code VARCHAR(2) NOT NULL,
    agent_id INT NOT NULL,
    submission_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    test_id VARCHAR(50) UNIQUE NOT NULL,
    screening_no INT NOT NULL,
    sample_space_time ENUM('0', '10', '48') NOT NULL,
    collection_time DATETIME NOT NULL,
    agent_score FLOAT NOT NULL,
    final_score FLOAT NULL,
    status ENUM('pending', 'finalized') DEFAULT 'pending',
    endoscopy_media_url TEXT NOT NULL,
    agent_review TEXT NULL,
    FOREIGN KEY (agent_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (center_code) REFERENCES centers(center_code) ON DELETE CASCADE
);

-- Scores Table: Stores scoring done by central readers
CREATE TABLE scores (
    id INT PRIMARY KEY AUTO_INCREMENT,
    test_id INT NOT NULL,
    reader_id INT NOT NULL,
    score FLOAT NOT NULL,
    status ENUM('pending', 'confirmed') DEFAULT 'pending',
    reader_review TEXT NULL,
    FOREIGN KEY (test_id) REFERENCES tests(id) ON DELETE CASCADE,
    FOREIGN KEY (reader_id) REFERENCES users(id) ON DELETE CASCADE
);

-- Score Validation Table: Stores the final decision-making process
CREATE TABLE score_validation (
    id INT PRIMARY KEY AUTO_INCREMENT,
    test_id INT NOT NULL,
    agent_score FLOAT NOT NULL,
    reader1_id INT NOT NULL,
    reader1_score FLOAT NOT NULL,
    reader2_id INT NULL,
    reader2_score FLOAT NULL,
    final_score FLOAT NOT NULL,
    status ENUM('pending', 'finalized') DEFAULT 'pending',
    FOREIGN KEY (test_id) REFERENCES tests(id) ON DELETE CASCADE,
    FOREIGN KEY (reader1_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (reader2_id) REFERENCES users(id) ON DELETE CASCADE
);

-- Insert predefined centers
INSERT INTO centers (center_code, center_name) VALUES
('01', 'AIIMS, New Delhi'),
('02', 'BHU, Varanasi'),
('03', 'DMC, Ludhiana'),
('04', 'Lisie Hospital, Kochi'),
('05', 'LTMGH & LTMMC, Mumbai'),
('06', 'PGI, Chandigarh');

-- Insert predefined users with hashed passwords (passwords need to be hashed in the application before insertion)
INSERT INTO users (username, password_hash, role, center_code) VALUES
('agent01', 'hashed_password_01', 'agent', '01'),
('agent02', 'hashed_password_02', 'agent', '02'),
('agent03', 'hashed_password_03', 'agent', '03'),
('agent04', 'hashed_password_04', 'agent', '04'),
('agent05', 'hashed_password_05', 'agent', '05'),
('agent06', 'hashed_password_06', 'agent', '06'),
('reader01', 'hashed_password_07', 'central_reader', '01'),
('reader02', 'hashed_password_08', 'central_reader', '02'),
('reader03', 'hashed_password_09', 'central_reader', '03'),
('reader04', 'hashed_password_10', 'central_reader', '04'),
('reader05', 'hashed_password_11', 'central_reader', '05'),
('reader06', 'hashed_password_12', 'central_reader', '06'),
('superadmin', 'hashed_superadmin_password', 'super_admin', '01');
